// Use DBML to define your database structure
// Docs: https://dbml.dbdiagram.io/docs

Table follows {
  following_user_id integer
  followed_user_id integer
  created_at timestamp 
}

Table users {
  id integer [primary key]
  username varchar
  role varchar
  created_at timestamp
}

Table posts {
  id integer [primary key]
  title varchar
  body text [note: 'Content of the post']
  user_id integer [not null]
  status varchar
  created_at timestamp
}



Table acts {
  id integer [primary key]
  notaryid integer [ref: - notaries.id]
  actnumber varchar [note: 'act numbers are non-linear']
  numpages integer
  people integer [ref: > people.id]
  pages varchar
}

Table people {
  id integer [primary key] 
  name varchar
  acts integer [ref: > acts.id]
  FSlink varchar [note: 'link to FamilySearch']
  notes varchar

}

Table notaries {
  id integer [primary key]
  name varchar
  banqfond varchar
  infopage varchar
  yearbegin integer
  yearend integer
  repositorylocation varchar
}

Table image_set {
  id integer [primary key]
  notaryid integer [ref: - notaries.id]
  series_name varchar
  images integer [ref: > images.id]
}

Table images {
  id integer [primary key]
  notaryid integer [ref: - notaries.id]
  imageseriesid integer [ref: - image_set.id]
  partofact integer [ref: - acts.id]
  banqurl varchar
}

Ref user_posts: posts.user_id > users.id // many-to-one

Ref: users.id < follows.following_user_id

Ref: users.id < follows.followed_user_id


//Ref: image_set.notaryid < notaries.id

